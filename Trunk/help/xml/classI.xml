<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.3">
  <compounddef id="classI" kind="class" prot="public">
    <compoundname>I</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classI_1a770286d140f1b44e5e98a9495e067f88" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static get_include_directory</definition>
        <argsstring>()</argsstring>
        <name>get_include_directory</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get the the file location of the current class or running script file. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="20" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="20" bodyend="23"/>
      </memberdef>
      <memberdef kind="function" id="classI_1afdf75a0a80d03ecbc6660b61b3202933" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static require_all_once</definition>
        <argsstring>($pattern)</argsstring>
        <name>require_all_once</name>
        <param>
          <type>$</type>
          <declname>pattern</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load all the files (via require_once function) using supplied pattern.</para><para>Allows the loading of all files within a particular folder or following a specified pattern. Eg: <computeroutput> &lt;?php require_all_once(&apos;includes/*.php&apos;); ?&gt; </computeroutput> This will include all the php files in the includes folder.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>string</parametertype>
<parametername>$pattern</parametername>
</parameternamelist>
<parameterdescription>
<para>The file search pattern for requiring. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="38" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classI_1a5bd88356365e8488e6989745f3f0dae3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static reformat_role_string</definition>
        <argsstring>($text)</argsstring>
        <name>reformat_role_string</name>
        <param>
          <type>$</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add square brackets between list items.</para><para>This method is used to make searching for key-values in an SQL database work. Eg. PC,Mobile,Facebook would become: [PC], [Mobile],[Facebook]. You can then search for Like *[PC]* and not find &apos;PC&apos; in the middle of a word. Method will also get rid of double square-bracket notation &apos;[[&apos; used in <ref refid="namespaceImpact" kindref="compound">Impact</ref> plugins.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>string</parametertype>
<parametertype>array</parametertype>
<parametername>$text</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to parse. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string Parsed text with square brackets. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="58" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="58" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classI_1a85077c9c8dcdcd64ca0f17d17b1e0626" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static load_config</definition>
        <argsstring>($path)</argsstring>
        <name>load_config</name>
        <param>
          <type>$</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Load a config file</para><para>Loads a config file (XML) and returns it&apos;s values as an array. String-values are returned as strings and integer-values as integers.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>String</parametertype>
<parametername>$path</parametername>
</parameternamelist>
<parameterdescription>
<para>Location of the settings file. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string()|integer() </para></simplesect>
<xrefsect id="todo_1_todo000009"><xreftitle>Todo</xreftitle><xrefdescription><para>Make it work with more complex data types. </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="90" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="90" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="classI_1a52dd69e0432c6499c10fa0db446842e9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static camelize</definition>
        <argsstring>($name)</argsstring>
        <name>camelize</name>
        <param>
          <type>$</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a function-name into a variable name.</para><para>According to the <ref refid="namespaceImpact" kindref="compound">Impact</ref> coding standards, functions/methods are named with words separated with underscores; variables/properties are named using camelCase. This function allows conversion so that the magic method __set()/__get() work as expected.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>String</parametertype>
<parametername>$name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of function. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String The corresponding variable name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="122" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="122" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classI_1ae81ca51a5d6a37d2466fd85123b98ea2" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static uncamelize</definition>
        <argsstring>($name)</argsstring>
        <name>uncamelize</name>
        <param>
          <type>$</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert a variable name into a function-name.</para><para>According to the <ref refid="namespaceImpact" kindref="compound">Impact</ref> coding standards, functions/methods are named with words separated with underscores; variables/properties are named using camelCase. This function allows conversion so that the magic method __set()/__get() work as expected.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>String</parametertype>
<parametername>$name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of variable. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String The corresponding function name </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="147" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="147" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classI_1ae5b2a61ce32761233d68b14312064f4b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>static</type>
        <definition>static contains</definition>
        <argsstring>($text1, $text2)</argsstring>
        <name>contains</name>
        <param>
          <type>$</type>
          <declname>text1</declname>
        </param>
        <param>
          <type>$</type>
          <declname>text2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Is the one snippet of text contained within another.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>String</parametertype>
<parametername>$text1</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search within. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>String</parametertype>
<parametername>$text2</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to search for. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Boolean </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="160" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="160" bodyend="162"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" line="14" bodyfile="H:/www/htdocs/Projects/ImpactCRM/ImpactCRM/models/I.php" bodystart="14" bodyend="163"/>
    <listofallmembers>
      <member refid="classI_1a52dd69e0432c6499c10fa0db446842e9" prot="public" virt="non-virtual"><scope>I</scope><name>camelize</name></member>
      <member refid="classI_1ae5b2a61ce32761233d68b14312064f4b" prot="public" virt="non-virtual"><scope>I</scope><name>contains</name></member>
      <member refid="classI_1a770286d140f1b44e5e98a9495e067f88" prot="public" virt="non-virtual"><scope>I</scope><name>get_include_directory</name></member>
      <member refid="classI_1a85077c9c8dcdcd64ca0f17d17b1e0626" prot="public" virt="non-virtual"><scope>I</scope><name>load_config</name></member>
      <member refid="classI_1a5bd88356365e8488e6989745f3f0dae3" prot="public" virt="non-virtual"><scope>I</scope><name>reformat_role_string</name></member>
      <member refid="classI_1afdf75a0a80d03ecbc6660b61b3202933" prot="public" virt="non-virtual"><scope>I</scope><name>require_all_once</name></member>
      <member refid="classI_1ae81ca51a5d6a37d2466fd85123b98ea2" prot="public" virt="non-virtual"><scope>I</scope><name>uncamelize</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
