<?xml version="1.0" encoding="UTF-8"?>
<!-- Komodo Project File - DO NOT EDIT -->
<project id="3aece6e4-1269-4324-b164-f0aa2d4eb654" kpf_version="4" name="Impact.kpf">
<folder id="6c8f702a-210e-4cdf-b0f5-3abf2054ca6d" idref="00b57f32-6d6f-4160-9d0e-3953a94737d4" name="Checking">
</folder>
<folder id="fdc3da6d-8038-47cd-afbb-3e051d3889ec" idref="00b57f32-6d6f-4160-9d0e-3953a94737d4" name="SVN">
</folder>
<command cwd="%p/util" doNotOpenOutputWindow="0" env="" icon="chrome://openoffice/skin/icons/form-control-properties.png" id="16caa65b-2e0f-4f6e-b829-9faaa5df688a" idref="24a6774e-d472-435f-af19-4edb94d1103f" insertOutput="0" keyboard_shortcut="" name="Check All" operateOnSelection="0" parseOutput="0" parseRegex="" runIn="command-output-window" showParsedOutputList="0">
Impact.bat UnitTest "%(path:supportDir)/../../komodo.exe" all</command>
<macro async="0" icon="chrome://openoffice/skin/icons/form-control-properties.png" id="1879203a-23d2-440c-8b9e-1cfe0ae90751" idref="24a6774e-d472-435f-af19-4edb94d1103f" keyboard_shortcut="" language="JavaScript" name="Check Current File" rank="100" trigger="trigger_postopen" trigger_enabled="0">
// summary:
//      Run a Unit Test against the current file.
// description:
//      Taking the current active file, look for it within the current projects
//      and calculate the path to its Unit Test file.  Try to then run the
//      Unit Test against the file using project Batch Files.  If file does not
//      exist fire an error.

var project = getProject();
if (project) {
    var projectPath = getProjectPath(project);
    var testPath = getTestPath(projectPath);
    var testPathFull = projectPath+'\\util\\unit_tests\\'+testPath;

    if (isInProject(testPathFull,project)) {
        ko.run.runEncodedCommand(window, 'Impact.bat UnitTest \"%(path:supportDir)/../../komodo.exe\" '+testPath+' {\'cwd\': u\'%p/util\'}');
    } else {
        alert("There is no Unit Test for this project.");
    }
} else {
    alert("Could not find current file in open projects.")
}


function getProject() {
    //  summary:
    //      Get the project, the current file is attached to (will assume first
    //      which it find the current file in).
    //  returns: Object KomodoProject

    var url = ko.views.manager.currentView.document.file.URI;
    var projects = ko.projects.manager.getAllProjects();
    
    for (i in projects) {
        if (isInProject(url,projects[i])) {
            return projects[i];
        }
    }
    
    return false;
}

function isInProject(path,project) {
    // summary:
    //      Test whether a give path+file is in contained within given project.
    // path:
    //      The file path to test (including the actual filename).
    // project: object KomodoProject
    //      The project to look in.
    // returns: boolean

    try {
        var result = {};
        project.getAllContainedURLs(result, {});
        var urls = result.value;
        var url = makeURL(path);
        
        return ((urls.indexOf(url) == -1) ? false:true);
    } catch(e) {
       return false;
    } 
}

function makeURL(path) {
    // summary:
    //      Turn a given path into a URI.
    // path: string
    //      The path to convert.
    // returns: string
    
    if (path.indexOf('file:///') == -1) {
        return 'file:///'+path.replace(/\\/g,'/');
    } else {
        return path;
    }
}

function getTestPath(projectPath) {
    // summary:
    //      Get the test path for the current file.
    // projectPath: string
    //      The root-path of the parent project
    // returns: string

    var currentFile = ko.views.manager.currentView.document.file;
    var fileName = removeFileExtention(currentFile);
    
    var testPath = currentFile.dirName.replace(projectPath,'');
    testPath += '\\' + fileName + '.Test.php';
    return testPath.substr(1);
}

function removeFileExtention(file) {
    // summary:
    //      Get the name of the file without a file extension.
    // file: object MozillaFile
    //      The file object.
    // returns: string
    
    var fileName = file.baseName;
    var ext = file.ext;
    return fileName.substring(0,fileName.length-ext.length);
}

function getProjectPath(project) {
    // summary:
    //      Get the path of a project.
    // project: object KomodoProject
    //      The project to get the path of.
    // returns: string
    
    var projectFile = project.getFile();
    return projectFile.dirName;
}
</macro>
<command cwd="%p/util" doNotOpenOutputWindow="0" env="" icon="chrome://openoffice/skin/icons/form-control-properties.png" id="c4c38014-34f7-40f8-92ae-ec0fbb2ab35b" idref="24a6774e-d472-435f-af19-4edb94d1103f" insertOutput="0" keyboard_shortcut="" name="Check Project Models" operateOnSelection="0" parseOutput="0" parseRegex="" runIn="command-output-window" showParsedOutputList="0">
Impact.bat UnitTest "%(path:supportDir)/../../komodo.exe" models</command>
<folder id="00b57f32-6d6f-4160-9d0e-3953a94737d4" idref="3aece6e4-1269-4324-b164-f0aa2d4eb654" name="COMMANDS">
</folder>
<command cwd="%p/util" doNotOpenOutputWindow="0" env="" icon="chrome://openoffice/skin/icons/linepen.png" id="07b8cdd7-bc2f-4c59-ad00-ba0a9a71baff" idref="3ed30780-4eb1-4dc9-a8ad-287dc7e22f7c" insertOutput="0" keyboard_shortcut="" name="Check All" operateOnSelection="0" parseOutput="0" parseRegex="" runIn="command-output-window" showParsedOutputList="0">
Impact.bat CodeCheck "%(path:supportDir)/../../komodo.exe" all</command>
<macro async="0" icon="chrome://openoffice/skin/icons/linepen.png" id="2944e796-195e-4cb6-a070-a837478f84fc" idref="3ed30780-4eb1-4dc9-a8ad-287dc7e22f7c" keyboard_shortcut="" language="JavaScript" name="Check Current File" rank="100" trigger="trigger_postopen" trigger_enabled="0">
// summary:
//      Run a PHP_CodeSniff against the current file.

var project = getProject();
if (project) {
    var projectPath = getProjectPath(project);
    var relativePath = getRelativePath(projectPath);
    
    ko.run.runEncodedCommand(window, 'Impact.bat CodeCheck \"%(path:supportDir)/../../komodo.exe\" ../'+relativePath+' {\'cwd\': u\'%p/util\'}');
} else {
    alert("Could not find current file in open projects.")
}


function getProject() {
    //  summary:
    //      Get the project, the current file is attached to (will assume first
    //      which it find the current file in).
    //  returns: Object KomodoProject

    var url = ko.views.manager.currentView.document.file.URI;
    var projects = ko.projects.manager.getAllProjects();
    
    for (i in projects) {
        if (isInProject(url,projects[i])) {
            return projects[i];
        }
    }
    
    return false;
}

function isInProject(path,project) {
    // summary:
    //      Test whether a give path+file is in contained within given project.
    // path:
    //      The file path to test (including the actual filename).
    // project: object KomodoProject
    //      The project to look in.
    // returns: boolean

    try {
        var result = {};
        project.getAllContainedURLs(result, {});
        var urls = result.value;
        var url = makeURL(path);
        
        return ((urls.indexOf(url) == -1) ? false:true);
    } catch(e) {
       return false;
    } 
}

function makeURL(path) {
    // summary:
    //      Turn a given path into a URI.
    // path: string
    //      The path to convert.
    // returns: string
    
    if (path.indexOf('file:///') == -1) {
        return 'file:///'+path.replace(/\\/g,'/');
    } else {
        return path;
    }
}

function getRelativePath(projectPath) {
    // summary:
    //      Get the relative path for the current file.
    // projectPath: string
    //      The root-path of the parent project
    // returns: string
    
    var path = ko.views.manager.currentView.document.file.path.replace(projectPath,'');
    return path.substr(1).replace('\\','/');
}

function getProjectPath(project) {
    // summary:
    //      Get the path of a project.
    // project: object KomodoProject
    //      The project to get the path of.
    // returns: string
    
    var projectFile = project.getFile();
    return projectFile.dirName;
}
</macro>
<command cwd="%p/util" doNotOpenOutputWindow="0" env="" icon="chrome://openoffice/skin/icons/linepen.png" id="cfaf5ef5-3095-4303-8b5f-dd3705a389cb" idref="3ed30780-4eb1-4dc9-a8ad-287dc7e22f7c" insertOutput="0" keyboard_shortcut="" name="Check PEAR Files" operateOnSelection="0" parseOutput="0" parseRegex="" runIn="command-output-window" showParsedOutputList="0">
Impact.bat CodeCheck "%(path:supportDir)/../../komodo.exe" pear</command>
<command cwd="%p/util" doNotOpenOutputWindow="0" env="" icon="chrome://openoffice/skin/icons/linepen.png" id="ee0a774e-42f3-4685-af73-d6c81963bcb8" idref="3ed30780-4eb1-4dc9-a8ad-287dc7e22f7c" insertOutput="0" keyboard_shortcut="" name="Check Impact Files" operateOnSelection="0" parseOutput="0" parseRegex="" runIn="command-output-window" showParsedOutputList="0">
Impact.bat CodeCheck "%(path:supportDir)/../../komodo.exe" impact</command>
<folder id="24a6774e-d472-435f-af19-4edb94d1103f" idref="6c8f702a-210e-4cdf-b0f5-3abf2054ca6d" name="PHP Unit">
</folder>
<folder id="3ed30780-4eb1-4dc9-a8ad-287dc7e22f7c" idref="6c8f702a-210e-4cdf-b0f5-3abf2054ca6d" name="Code Check">
</folder>
<command cwd="%p/util" doNotOpenOutputWindow="0" env="" icon="chrome://openoffice/skin/icons/calc-accept.png" id="9540d8c5-8ffc-4e23-92be-adbc74c23a59" idref="6c8f702a-210e-4cdf-b0f5-3abf2054ca6d" insertOutput="0" keyboard_shortcut="" name="Unit &amp; Code Test All" operateOnSelection="0" parseOutput="0" parseRegex="" runIn="command-output-window" showParsedOutputList="0">
Impact.bat CheckAll "%(path:supportDir)/../../komodo.exe"</command>
<macro async="0" icon="chrome://openoffice/skin/icons/insert_section.png" id="1a200796-41e4-4a73-b291-89e6d1fad670" idref="fdc3da6d-8038-47cd-afbb-3e051d3889ec" keyboard_shortcut="" language="JavaScript" name="Log (Current File)" rank="100" trigger="trigger_postopen" trigger_enabled="0">
var path = ko.views.manager.currentView.document.file.path;
ko.run.runEncodedCommand(window, 'TortoiseProc.exe /command:log /path:\"'+path+'\" {\'cwd\': u\'%p\'}');</macro>
<macro async="0" icon="chrome://openoffice/skin/icons/navigator-insert-as-link.png" id="3e776487-1249-4a1f-a583-3023f7b23eb8" idref="fdc3da6d-8038-47cd-afbb-3e051d3889ec" keyboard_shortcut="" language="JavaScript" name="Properties (Current File)" rank="100" trigger="trigger_postopen" trigger_enabled="0">
var path = ko.views.manager.currentView.document.file.path;
ko.run.runEncodedCommand(window, 'TortoiseProc.exe /command:properties /path:\"'+path+'\" {\'cwd\': u\'%p\'}');</macro>
<macro async="0" icon="chrome://openoffice/skin/icons/data-linked-table.png" id="4da6e5ed-036d-4342-bfc5-ba1414773409" idref="fdc3da6d-8038-47cd-afbb-3e051d3889ec" keyboard_shortcut="" language="JavaScript" name="Commit All" rank="100" trigger="trigger_postopen" trigger_enabled="0">
// summary:
//      Commit the project, which contains the currently active document.

var project = getProject();
if (project) {
    var path = getProjectPath(project);
    
    ko.run.runEncodedCommand(window, 'TortoiseProc.exe /command:commit /path:\"'+path+'\" {\'cwd\': u\'%p\'}');
} else {
    alert("Could not find current file in open projects.")
}


function getProject() {
    //  summary:
    //      Get the project, the current file is attached to (will assume first
    //      which it find the current file in).
    //  returns: Object KomodoProject

    var url = ko.views.manager.currentView.document.file.URI;
    var projects = ko.projects.manager.getAllProjects();
    
    for (i in projects) {
        if (isInProject(url,projects[i])) {
            return projects[i];
        }
    }
    
    return false;
}

function isInProject(path,project) {
    // summary:
    //      Test whether a give path+file is in contained within given project.
    // path:
    //      The file path to test (including the actual filename).
    // project: object KomodoProject
    //      The project to look in.
    // returns: boolean

    try {
        var result = {};
        project.getAllContainedURLs(result, {});
        var urls = result.value;
        var url = makeURL(path);
        
        return ((urls.indexOf(url) == -1) ? false:true);
    } catch(e) {
       return false;
    } 
}

function makeURL(path) {
    // summary:
    //      Turn a given path into a URI.
    // path: string
    //      The path to convert.
    // returns: string
    
    if (path.indexOf('file:///') == -1) {
        return 'file:///'+path.replace(/\\/g,'/');
    } else {
        return path;
    }
}

function getProjectPath(project) {
    // summary:
    //      Get the path of a project.
    // project: object KomodoProject
    //      The project to get the path of.
    // returns: string
    
    var projectFile = project.getFile();
    return projectFile.dirName;
}
</macro>
<macro async="0" icon="chrome://openoffice/skin/icons/zoom.png" id="eb1ed4bb-c2b1-40c6-b291-ffb85c610758" idref="fdc3da6d-8038-47cd-afbb-3e051d3889ec" keyboard_shortcut="" language="JavaScript" name="Repo Browser" rank="100" trigger="trigger_postopen" trigger_enabled="0">
// summary:
//      Open the repo-browser at the path specidied in the open project (linked to current file).

var project = getProject();
if (project) {
    var path = getProjectPath(project);
    
    ko.run.runEncodedCommand(window, 'TortoiseProc.exe /command:repobrowser /path:\"'+path+'\" {\'cwd\': u\'%p\'}');
} else {
    alert("Could not find current file in open projects.")
}


function getProject() {
    //  summary:
    //      Get the project, the current file is attached to (will assume first
    //      which it find the current file in).
    //  returns: Object KomodoProject

    var url = ko.views.manager.currentView.document.file.URI;
    var projects = ko.projects.manager.getAllProjects();
    
    for (i in projects) {
        if (isInProject(url,projects[i])) {
            return projects[i];
        }
    }
    
    return false;
}

function isInProject(path,project) {
    // summary:
    //      Test whether a give path+file is in contained within given project.
    // path:
    //      The file path to test (including the actual filename).
    // project: object KomodoProject
    //      The project to look in.
    // returns: boolean

    try {
        var result = {};
        project.getAllContainedURLs(result, {});
        var urls = result.value;
        var url = makeURL(path);
        
        return ((urls.indexOf(url) == -1) ? false:true);
    } catch(e) {
       return false;
    } 
}

function makeURL(path) {
    // summary:
    //      Turn a given path into a URI.
    // path: string
    //      The path to convert.
    // returns: string
    
    if (path.indexOf('file:///') == -1) {
        return 'file:///'+path.replace(/\\/g,'/');
    } else {
        return path;
    }
}

function getProjectPath(project) {
    // summary:
    //      Get the path of a project.
    // project: object KomodoProject
    //      The project to get the path of.
    // returns: string
    
    var projectFile = project.getFile();
    return projectFile.dirName;
}
</macro>
<macro async="0" icon="chrome://openoffice/skin/icons/copy.png" id="fdfaab46-568d-4aa7-8fa8-3094d358566e" idref="fdc3da6d-8038-47cd-afbb-3e051d3889ec" keyboard_shortcut="" language="JavaScript" name="Diff (Current File)" rank="100" trigger="trigger_postopen" trigger_enabled="0">
var path = ko.views.manager.currentView.document.file.path;
ko.run.runEncodedCommand(window, 'TortoiseProc.exe /command:diff /path:\"'+path+'\" {\'cwd\': u\'%p\'}');</macro>
<preference-set idref="3aece6e4-1269-4324-b164-f0aa2d4eb654">
  <boolean id="import_live">1</boolean>
  <string relative="path" id="phpExtraPaths"></string>
</preference-set>
</project>
